service: backend-demo
# app: app-nodejs
# org: kattyhidalgo

frameworkVersion: '2'

package:
  individually: true
  
custom:
  serverless-offline:
    httpPort: 3300
    lambdaPort: 3302
  webpack:
    includeModules: false

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-dotenv-plugin
  # - serverless-bundle
  - serverless-webpack
  
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  stage: stage
  region: us-east-2

  resources:
    '${file(resources/api-gateway-errors.yml)}'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

functions:
  index:
    handler: handler.index
    events:
      - http:
          path: /
          method: get
  
  getUsersAll:
    handler: handlers/users.getUsersAll
    memorySize: 128
    timeout: 12
    description: Mostrar todos los usuarios de dynamodb. 
    events:
      - http:
          path: /endpoint/v1/users
          method: get
          # cors: true
          # authorizer: aws_iam
  
  postUser:
    handler: handlers/users.postUser
    memorySize: 128
    timeout: 12
    description: Registrar Usuario en DynamoDb
    events:
      - http:
          path: /endpoint/v1/users
          method: post
          # cors: true
          # authorizer: aws_iam

  getUser:
    handler: handlers/users.getUser
    memorySize: 128
    timeout: 12
    description: Mostrar un usuario de dynamodb.
    events:
    - http:
        path: /endpoint/v1/users/{user_id}
        method: get
        # cors: true
        # authorizer: aws_iam

  updateUser:
    handler: handlers/users.updateUser
    memorySize: 128
    timeout: 12
    description: Modificar datos un usuario de dynamodb.
    events:
    - http:
        path: /endpoint/v1/users/{user_id}
        method: put
        # cors: true
        # authorizer: aws_iam

  deleteUser:
    handler: handlers/users.deleteUser
    memorySize: 128
    timeout: 12
    description: Eliminar un usuario de dynamodb.
    events:
    - http:
        path: /endpoint/v1/users/{user_id}
        method: delete
        # cors: true
        # authorizer: aws_iam

  getApiStartWardsPersons:
    handler: handlers/startwards.getStartWardsPersons
    memorySize: 128
    timeout: 12
    description: Obtener Informacion de Api de StartWards y traducir a espa√±ol los Keys
    events:
    - http:
        path: /endpoint/v1/startwards/persons/{person_id}
        method: get
        # cors: true
